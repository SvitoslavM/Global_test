{"name": "test_find_pet", "status": "failed", "statusDetails": {"message": "AssertionError: wrong status code\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "@allure.story('Check added pet can be found')\n    def test_find_pet():\n        \"\"\"Этот тест проверяет по Name добавлен ли питомец\"\"\"\n        with allure.step('Add new pet'):\n            new_pet = {\n                'id': 5,\n                'name': 'zoro'\n            }\n            add_pet(new_pet)\n        with allure.step('Find added pet'):\n            pet_id = 5\n            response = find_pet(pet_id)\n        with allure.step('Check pet had been found by name'):\n>           assert response.status_code == 200, 'wrong status code'\nE           AssertionError: wrong status code\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntest_api.py:33: AssertionError"}, "description": "Этот тест проверяет по Name добавлен ли питомец", "steps": [{"name": "Add new pet", "status": "passed", "start": 1667477552129, "stop": 1667477552686}, {"name": "Find added pet", "status": "passed", "start": 1667477552686, "stop": 1667477553236}, {"name": "Check pet had been found by name", "status": "failed", "statusDetails": {"message": "AssertionError: wrong status code\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"/Users/sviatoslav/tmp/GLOBALTEAM_test/test_api.py\", line 33, in test_find_pet\n    assert response.status_code == 200, 'wrong status code'\n"}, "start": 1667477553236, "stop": 1667477553237}], "start": 1667477552128, "stop": 1667477553238, "uuid": "43027887-9a84-4fff-a1b3-acea0a4db2b0", "historyId": "7bd28c855dfd29406f8281dd1337a21f", "testCaseId": "7dbcd013898ae3c1233f6b646a5959fd", "fullName": "test_api#test_find_pet", "labels": [{"name": "story", "value": "Check added pet can be found"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "MacBook-Air-Sviatoslav.local"}, {"name": "thread", "value": "13080-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}